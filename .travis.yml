services:
  - docker

install:
  - curl https://cli-assets.heroku.com/install.sh | sh

script:


  - > # DEFINICION DE VARIABLES Y FUNCIONES DE CONTROL

    export step=0;
    export totalSteps=6;
    eport stepName;

    printStepFormat () {
      case "$1" in
      "INICIADO")
        echo -e "\n\n\n\n\033[1m\e[33m ----- PASO $step $1 - $stepName ----- \n"
        ;;
      "FALLIDO")
        echo -e "\n\033[1m\e[31m ----- PASO $step $1 - $stepName ----- \n\n\n\n"
        ;;
      "EXITOSO")
        echo -e "\n\033[1m\e[32m ----- PASO $step $1 - $stepName ----- \n\n\n\n"
        ;;
      esac
    };

    stepInit () {
      step=$((step + 1));
      stepName=$1;
      printStepFormat INICIADO;
    };

    stepFinish () {
      if [[ "$1" = "1" ]]
        then printStepFormat FALLIDO;
        exit 1;
      fi;
      printStepFormat EXITOSO
    };




  - > # DESCARGA DE IMAGEN DE DOCKERHUB

    stepInit "DESPLIEGUE A DOCKERHUB";

    echo "$DOCKER_PASSWORD" | docker login -u $ORGANIZATION --password-stdin;
    docker pull $ORGANIZATION/payroll-server:latest

    stepFinish $?;




  - > # DESPLIEGUE A HEROKU REGISTRY

    stepInit "DESPLIEGUE A HEROKU REGISTRY";

    echo "$HEROKU_API_KEY" | docker login -u_ --password-stdin registry.heroku.com;
    docker tag $ORGANIZATION/payroll-server:latest registry.heroku.com/$HEROKU_APP_PRODUCTION/web;
    docker push registry.heroku.com/$HEROKU_APP_PRODUCTION/web;

    stepFinish $?;




  - > # RELEASE DE HEROKU APP PRODUCTION

    stepInit "RELEASE DE HEROKU APP PRODUCTION";

    heroku container:release web --app=$HEROKU_APP_PRODUCTION; 

    stepFinish $?;


